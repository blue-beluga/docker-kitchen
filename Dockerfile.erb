# encoding: UTF-8

FROM <%= ENV.fetch('FROM') %>
MAINTAINER The Blue Beluga <admin@bluebeluga.io>

LABEL vendor="The Blue Beluga Company"
LABEL io.bluebeluga.systemd.description="CentOS with systemd for Chef development"
LABEL io.bluebeluga.systemd.git-revision="<%= ENV.fetch('GIT_REVISION') %>"
LABEL io.bluebeluga.systemd.release-date="<%= Time.now.strftime('%B %d, %Y %H:%M') %>"

RUN yum -y update; \
    systemctl mask systemd-remount-fs.service; \
    # Install Chef client
    CHEFURL="https://packages.chef.io/stable"; \    
    yum install -y ${CHEFURL}/el/7/chef-12.12.15-1.el7.x86_64.rpm; \
    yum install -y iproute sudo; \
    yum clean all;

VOLUME ["/sys/fs/cgroup", "/run"]
CMD  ["/usr/lib/systemd/systemd"]



# Systemd needs to be able to access cgroups
VOLUME /sys/fs/cgroup 

# Setup container to run Systemd as root process, start an SSH 
# daemon, and provision a user for test-kitchen to connect as.
RUN yum clean all && \ 
    yum -y swap — remove fakesystemd — install systemd systemd-libs && \
    
    # Remove unneeded unit files as this container isn't a proper machine 
    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done) && \ 
    rm -f /lib/systemd/system/multi-user.target.wants/* && \ 
    rm -f /etc/systemd/system/*.wants/* && \ 
    rm -f /lib/systemd/system/local-fs.target.wants/* && \ 
    rm -f /lib/systemd/system/sockets.target.wants/*udev* && \ 
    rm -f /lib/systemd/system/sockets.target.wants/*initctl* && \ 
    rm -f /lib/systemd/system/basic.target.wants/* && \ 
    rm -f /lib/systemd/system/anaconda.target.wants/* && \ 

    # Setup kitchen user with passwordless sudo 
    useradd -d /home/kitchen -m -s /bin/bash kitchen && \ 
    (echo kitchen:kitchen | chpasswd) && \ 
    mkdir -p /etc/sudoers.d && \ 
    echo 'kitchen ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/kitchen && \ 

    # Setup SSH daemon so test-kitchen can access the container 
    yum -y install openssh-server openssh-clients && \ 
    ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N '' && \ 
    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' && \ 
    echo 'OPTIONS="-o UseDNS=no -o UsePAM=no -o PasswordAuthentication=yes"' >> /etc/sysconfig/sshd && \ 
    systemctl enable sshd.service 

  # Install basic system packages that we expect to exist by default. 
  # We do this in a separate RUN command since these packages are more 
  # likely to change over time, and we want to reuse previous layers as 
  # much as possible.
RUN yum -y install crontabs curl initscripts net-tools passwd sudo tar which && \ 
    (curl -L https://www.opscode.com/chef/install.sh | bash -s — -v 12.0.3)